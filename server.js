//importing all apis
const express = require("express");
const app = express();
const server = require("http").Server(app);
const { v4: uuidv4 } = require("uuid");
const cors = require("cors");
app.set("view engine", "ejs"); // change default template engine to ejs

const io = require("socket.io")(server)//,{
//   cors: {
// 		origin: "*",
// 		methods: [ "GET", "POST" ],
// 	}
// });
app.use(cors());
const { ExpressPeerServer } = require("peer");
const peerServer = ExpressPeerServer(server, {
  debug: true,

});


app.use("/peerjs", peerServer);
app.use(express.static("public"));//connect all static files in public folder

// when user enter then it redirect to the unique id generated by uuid
app.get("/", (req, res) => {
  res.redirect(`/${uuidv4()}`);
});

//render to room with params in roomId variable
app.get("/:room", (req, res) => {
  res.render("room", { roomId: req.params.room });
});


//it makes connection to socket
io.on("connection", (socket) => {
  // here we define join room event, it call when an new user join room
  socket.on("join-room", (roomId, userId, userName) => {
    socket.join(roomId);
    socket.to(roomId).broadcast.emit("user-connected", userId);
    socket.on("message", (message) => {
      io.to(roomId).emit("createMessage", message, userName);
    });
    // when user disconnected then this disconnect event called
    socket.on("disconnect",()=>{
      socket.to(roomId).broadcast.emit("user-disconnected",userId);
    })
  });
 
});

server.listen(process.env.PORT || 3030);
